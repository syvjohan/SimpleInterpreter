:sysMemAllocHeap 64;
:sysCreateStack 32;

:include("C:\\Programmering\\SimpleInterpreter\\syntax\\anotherfile.q");

:alias str : #32 = "hej";
:alias number : #35 = 10 + 5;

:print(number); /*skriver ut värdet*/
:print(str); /*skriver ut värdet*/

:print(&str); /*Skriver ut addresen 32*/
:print( &number ); /*Skriver ut addresen 35*/

:stk.pushTop(10);
:alias s : #39 = :stk.getTop() + 5;
:if(s == 15) {
	:print("success");
} :else {
	:print("ERRROR");
}

:print("WhileLoop");
:stk.pushAt(4, 0); /*Pushes 0 to memory address 4*/
:while(:stk.getAt(4) != 10) {
	:print(:stk.getAt(4));
	:stk.pushAt(4, :stk.getAt(4) +1);
}

/* < > Jämför längderna på textsträngarna eller storleken på heltal*/
:if("s" < "number") {
	:print("success");
}  :else {
	:print("ERRROR");
}

:if("100" > "s") {
	:print("success");
} :else {
	:print("ERRROR");
}

:if("s" < "number") {
	:print("Success");
} :else { 
	:print("ERROR"); 
}

:if(s < number) {
	:print("true");
} :else {
	:print("Sucess");
}

:if(100 > s) {
	:print("true");
} :else {
	:print("Success");
}

:if(s == number) {
	:print("Sucess");
} :else {
	:print("ERRROR");
} 

:if(s != number) {
	:print("true");
} :else {
	:print("Sucess");
}

:if("number" == "number") {
	:print("success");
} :else {
	:print("ERRROR");
}

:if("s" != "number") {
	:print("success");
} :else {
	:print("ERRROR");
}

:if("nej" == "hej") {
	:print("ERROR");
} :else {
	:if(66 == 88) {
		:print("ERROR");
	} :else {
		:if("success" == "success") {
			:print("success");
		} :else {
			:print("ERROR");
		}
	}
}

:subroutine sub {
	&sum = val2 - val1;
};

:subroutine add {
	&sum = val1 + val2;
};

:subroutine mul {
	&sum = val2 * val1;
};

:subroutine div {
	&sum = val2 / val1;
};

:alias val1 : #43 = 3;
:alias val2 : #47 = 8; 
:alias val2Negative : #51 = -8;
:alias sum : #55 = 0;


:call sub;
:print("sub: ");
:if(sum == 5) { :print("Success"); } :else { :print("ERROR"); }
:if(val2 == 8) { :print("Success"); } :else { :print("ERROR"); }
:if(val1 == 3) { :print("Success"); } :else { :print("ERROR"); }

:call add;
:print("add: ");
:if(sum == 11) { :print("Success"); } :else { :prin("ERROR"); }
:if(val2 == 8) { :print("Success"); } :else { :prin("ERROR"); }
:if(val1 == 3) { :print("Success"); }  :else { :prin("ERROR"); }

:call mul;
:print("mul: ");
:if(sum == 24) { :print("Success"); }  :else { :prin("ERROR"); }
:if(val2 == 8) { :print("Success"); } :else { :prin("ERROR"); } 
:if(val1 == 3) { :print("Success"); }  :else { :prin("ERROR"); }

:call div;
:print("div: ");
:if(sum == 2) { :print("Success"); } :else { :prin("ERROR"); } 
:if(val2 == 8) { :print("Success"); } :else { :prin("ERROR"); }
:if(val1 == 3) { :print("Success"); } :else { :prin("ERROR"); }


:subroutine subReverseOrder {
	&sum = val1 - val2;
};

:subroutine addReverseOrder {
	&sum = val1 + val2;
};

:subroutine mulReverseOrder {
	&sum = val1 * val2;
};

:subroutine divReverseOrder {
	&sum = val1 / val2;
};

:call subReverseOrder;
:print("subReverseOrder");
:if(sum == -5) { :print("Success"); } :else { :prin("ERROR"); }


:call addReverseOrder;
:print("addReverseOrder");
:if(sum == 11) { :print("Success"); } :else { :prin("ERROR"); }


:call mulReverseOrder;
:print("mulReverseOrder");
:if(sum == 24) { :print("Success"); } :else { :prin("ERROR"); }


:call divReverseOrder;
:print("divReverseOrder");
:if(sum == 0) { :print("Success"); } :else { :prin("ERROR"); }


:subroutine subNegative {
	&sum = val1 - val2Negative;
};

:subroutine addNegative {
	&sum = val1 + val2Negative;
};

:subroutine mulNegative {
	&sum = val1 * val2Negative;
};

:subroutine divNegative {
	&sum = val1 / val2Negative;
};

:call subNegative;
:print("subNegative");
:if(#55 == 11) { :print("Success"); } :else { :prin("ERROR"); }

:call addNegative;
:print("addNegative");
:if(#55 == -5) { :print("Success"); } :else { :prin("ERROR"); } 

:call mulNegative;
:print("mulNegative");
:if(#55 == -24) { :print("Success"); } :else { :prin("ERROR"); } 

:call divNegative;
:print("divNegative");
:if(#55 == 0) { :print("Success"); } :else { :print("ERROR"); }